(library
 (name mccs_glpk)
 (public_name mccs.glpk.internal)
 (modules ocaml_mccs_glpk)
 (c_names ; Core GLPK
  ; draft
  bfd
  glpapi06
  glpapi09
  glpapi10
  glpapi12
  glpapi13
  glpios01
  glpios02
  glpios03
  glpios07
  glpios09
  glpios11
  glpios12
  glpscl
  ; api
  advbas
  cpxbas
  prob1
  prob2
  prob4
  prob5
;;  wrmip
  ; bflib
  btf
  btfint
  fhv
  fhvint
  fvs
  ifu
  luf
  lufint
  scf
  scfint
  sgf
  sva
  ; intopt
  cfg
  cfg1
  cfg2
  clqcut
  covgen
  fpump
  gmicut
  gmigen
  mirgen
  spv
  ; env
  alloc
  dlsup
  env
  error
  stdc
  stdout
;;  stream
  time
  tls
  ; misc
  avl
  dmp
  gcd
  jd
  ks
  mc13d
  mc21a
  mt1
  rng
  rng1
  round2n
  triang
  wclique
  wclique1
  ; npp
  npp1
  npp2
  npp3
  npp4
  npp5
  ; proxy
  proxy
  proxy1
  ; simplex
  spxat
  spxchuzc
  spxchuzr
  spxlp
  spxnt
  spxprim
  spxprob
  spychuzc
  spychuzr
  spydual)
 (c_flags
  :standard
  (:include cflags.sexp))
 (wrapped false))

(copy_files# api/*.{c,h})

(copy_files# bflib/*.{c,h})

(copy_files# draft/*.{c,h})

(copy_files# env/*.{c,h})

(copy_files# intopt/*.{c,h})

(copy_files# misc/*.{c,h})

(copy_files# npp/*.{c,h})

(copy_files# proxy/*.{c,h})

(copy_files# simplex/*.{c,h})

(executable
 (name context_flags)
 (modules context_flags)
 (libraries compiler-libs.common))

(rule
 (targets cflags.sexp)
 (deps context_flags.exe)
 (action
  (with-stdout-to
   %{targets}
   (run %{deps} cflags))))
